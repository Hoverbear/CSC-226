#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation skip
\defskip smallskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
CSC 226 - Assignment 1
\end_layout

\begin_layout Author
Andrew Hobden (V00788452)
\end_layout

\begin_layout Date
September 17, 2014
\end_layout

\begin_layout Section
Searching, Lower Bounds
\end_layout

\begin_layout Standard
The selection of the 
\begin_inset Formula $k^{th}$
\end_inset

 smallest element of a sequence of 
\begin_inset Formula $n$
\end_inset

 elements can be accomplished with a lower bound of 
\begin_inset Formula $\Omega(n)$
\end_inset

.
 A paritioning strategy is taken by Quick Select and Linear Select.
 With the choice of a good 
\begin_inset Formula $pivot$
\end_inset

 value, fractionally signifigant proportions of the sequence can be excluded
 from further inspection.
\end_layout

\begin_layout Subsection
Arguing the Low Bounds
\end_layout

\begin_layout Standard
It may be considered that in order to find the 
\begin_inset Formula $k^{th}$
\end_inset

 smallest element of an unsorted sequence of size 
\begin_inset Formula $n$
\end_inset

 where 
\begin_inset Formula $k$
\end_inset

 is actually the 
\begin_inset Formula $n^{th}$
\end_inset

largest element will always require 
\begin_inset Formula $n$
\end_inset

 elements to be looked at, even in the simplest case of 
\begin_inset Formula $max(sequence)$
\end_inset

, requires iterating over each element in the list.
 By necessity, this is 
\begin_inset Formula $\Omega(n)$
\end_inset

.
\end_layout

\begin_layout Standard
In the case of 
\begin_inset Formula $k<n$
\end_inset

, any selection algorithm must still be 
\begin_inset Formula $\Omega(n)$
\end_inset

 since the element may be at any position in the sequence.
 Consider the seqeuence 
\begin_inset Formula $[6,4,1,2,3]$
\end_inset

, in order to find 
\begin_inset Formula $k=3$
\end_inset

 the algorithm must view at least 
\begin_inset Formula $n$
\end_inset

 items without prior knowledge of the data in order to be assured what it
 has selected is actually the 
\begin_inset Formula $k^{th}$
\end_inset

 smallest element, otherwise it may select a inappropriate value.
\end_layout

\begin_layout Section
Linear Selection
\end_layout

\begin_layout Standard
Linear selection utilizes a chunk size of 
\begin_inset Formula $c$
\end_inset

, where 
\begin_inset Formula $c$
\end_inset

 is typically equal to 
\begin_inset Formula $\{5,7\}$
\end_inset

.
 The running time of a linear select behaves like so:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)_{Select}<T(\frac{n}{c})_{Pivot}+n_{Partition}+T(an)_{Recursion}
\]

\end_inset


\end_layout

\begin_layout Standard
Where 
\begin_inset Formula $a<1$
\end_inset

, and is resultant of the partitioning of 
\begin_inset Formula $n$
\end_inset

, therefore a subsequence of 
\begin_inset Formula $n$
\end_inset

.
 The algorithm relies on the fact that 
\begin_inset Formula $T(\frac{n}{c})+T(an)\le1+T(n)$
\end_inset

.
 If this is the case, the algorithm will progress like so:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)_{Select}=T(\frac{n}{c})+n+(T(\frac{an}{c})+an+T(a^{2}n))
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)_{Select}=T(\frac{n}{c})+n+(T(\frac{an}{c})+an+(T(\frac{a^{2}n}{c})+a^{2}n+T(a^{3}n))
\]

\end_inset


\end_layout

\begin_layout Subsection
In the case where 
\begin_inset Formula $c=5$
\end_inset


\end_layout

\begin_layout Standard
We can show that 
\begin_inset Formula $a=\frac{7}{10}$
\end_inset

.
 There are 
\series bold

\begin_inset Formula $\frac{3}{10}n$
\end_inset

 
\series default
values (white) not either:
\end_layout

\begin_layout Itemize
The chosen median (mid-center)
\end_layout

\begin_layout Itemize
Less than the chosen median (green)
\end_layout

\begin_layout Itemize
Greater than the chosen median (red)
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename linear5.svg
	width 80text%

\end_inset


\end_layout

\begin_layout Standard
Therefore each recursion operates on 
\begin_inset Formula $a\thickapprox\frac{7}{10}n$
\end_inset

 elements.
 This results in:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)\le an+T(\frac{n}{5})+T(\frac{7}{10}n)
\]

\end_inset


\end_layout

\begin_layout Standard
Following from the slides in class it can be shown that:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)\le an+\frac{9}{10}gn
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
an+\frac{9}{10}cn\le cn
\]

\end_inset


\end_layout

\begin_layout Standard
When 
\begin_inset Formula $c\ge10a$
\end_inset

.
\end_layout

\begin_layout Subsection
In the case where 
\begin_inset Formula $c=3$
\end_inset


\end_layout

\begin_layout Standard
In this case, 
\begin_inset Formula $a\thickapprox\frac{2}{3}$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename linear.svg
	width 80line%

\end_inset


\end_layout

\begin_layout Standard
This results in:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)\le an+T(\frac{1}{3}n)+T(\frac{2}{3}n)
\]

\end_inset


\end_layout

\begin_layout Standard
However the running time of 
\begin_inset Formula $c=3$
\end_inset

 is not linear.
 Recall that 
\begin_inset Formula $T(n)\in O(n)$
\end_inset

 if 
\begin_inset Formula $T(n)\le gn$
\end_inset

 for constant
\begin_inset Formula $g$
\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)\le an+g\frac{1}{3}n+g\frac{2}{3}n
\]

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
T(n)\le an+gn
\]

\end_inset


\end_layout

\begin_layout Standard
However observe that this implies:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
an+gn\le gn
\]

\end_inset


\end_layout

\begin_layout Standard
This is problematic, as 
\begin_inset Formula $a$
\end_inset

 would need to be a negative number, or zero, in order for this to hold
 true.
 Since 
\begin_inset Formula $a\nleqslant0$
\end_inset

, Linear Select with 
\begin_inset Formula $c=3$
\end_inset

 cannot be shown to behave linearly.
\end_layout

\begin_layout Section
MST, Graph Properties
\end_layout

\begin_layout Subsection
Cycle Property Correctness (Non-unique weights)
\end_layout

\begin_layout Quotation
For any cycle 
\begin_inset Formula $C$
\end_inset

 in the graph, if the weight of an edge 
\begin_inset Formula $e$
\end_inset

 of 
\begin_inset Formula $C$
\end_inset

 is larger than the weights of all other edges of 
\begin_inset Formula $C$
\end_inset

, then this edge cannot belong to an MST.
\end_layout

\begin_layout Standard
Assume there exists a cycle 
\begin_inset Formula $C$
\end_inset

 containing two edges, 
\begin_inset Formula $\{a,b\}$
\end_inset

, which have equal weight to each other, but are heavier than the other
 edges in the cycle.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
a=b>c\ge d\ge e\ge...
\]

\end_inset


\end_layout

\begin_layout Standard
If both 
\begin_inset Formula $a$
\end_inset

 and 
\begin_inset Formula $b$
\end_inset

 were part of the MST, there would either be:
\end_layout

\begin_layout Itemize
A lighter weight edge which was rejected from the MST, which would mean
 that the resultant MST would not be of minimum wieght possible.
\end_layout

\begin_layout Itemize
A cycle, which cannot exist in an MST.
\end_layout

\begin_layout Standard
Therefore at either 
\begin_inset Formula $a$
\end_inset

 or 
\begin_inset Formula $b$
\end_inset

 will not be in the MST.
 The cycle property still holds, and a choice of which edge to remove must
 be made.
\end_layout

\begin_layout Subsection
Cut Property Correctness (Non-unique weights)
\end_layout

\begin_layout Quotation
For any cut C in the graph, if the weight of an edge e of C is strictly
 smaller than the weights of all other edges of C, then this edge belongs
 to all MSTs of the graph.
\end_layout

\begin_layout Standard
Assume there exists a cut 
\begin_inset Formula $C$
\end_inset

 with connecting edges, 
\begin_inset Formula $\{a,b\}$
\end_inset

, of equal weight, but are lighter than all other edges in the cut.
\end_layout

\begin_layout Standard
\begin_inset Formula 
\[
a=b<c\le d\le e\le...
\]

\end_inset


\end_layout

\begin_layout Standard
Since only one edge is needed between the cut edges 
\begin_inset Formula $c,d,e,...$
\end_inset

 may be discarded.
 Since the cut between the two components needs only one of these cuts,
 all possible MSTs must contain either 
\begin_inset Formula $a$
\end_inset

 or 
\begin_inset Formula $b$
\end_inset

.
 If the function used to choose which edge to discard uses lexicographical
 order then the set of possible MSTs will all contain the chosen element.
 If the function is unpredictable in it's choice, then the set of possible
 MSTs contains all MSTs which contain one of the equally weighted edges.
\end_layout

\begin_layout Section
MST Algorithm
\end_layout

\begin_layout Subsection
Running into problems (non-unique weights)
\end_layout

\begin_layout Standard
Borůvka's algorithm encounters trouble when it attempts to select which
 edge to connect with node 
\begin_inset Formula $C$
\end_inset

.
 It may either choose node 
\begin_inset Formula $B$
\end_inset

 using an edge weight of 
\begin_inset Formula $2$
\end_inset

, or node 
\begin_inset Formula $A$
\end_inset

, also with an edge weight of 2.
 Since Borůvka's algorithm attempts to choose the lightest edge, it is unable
 to choose either, since they are of the same weight.
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename boruvka.svg
	scale 30

\end_inset


\end_layout

\begin_layout Subsection
Overcoming the Difficulty
\end_layout

\begin_layout Standard
This hiccup can be resolved by simply choosing the next node in the trees
 lexicographic ordering.
 Meaning, in the above case, that the algorithm would choose to connect
 
\begin_inset Formula $C$
\end_inset

 with 
\begin_inset Formula $A$
\end_inset

 over 
\begin_inset Formula $B$
\end_inset

.
 If there is no distinct ordering to the node or edge values, one can be
 chosen randomly, but this is not ideal.
\end_layout

\begin_layout Standard
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "boruvka.psuedocode"
lstparams "breaklines=true,captionpos=b,frame=tb,numbers=left"

\end_inset


\end_layout

\end_body
\end_document
